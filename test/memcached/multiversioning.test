# encoding: tarantool
from lib.memcached_connection import MemcachedConnection

buf_size = 256 * 1024
buf = "0123456789abcdef" * (buf_size / 16)
buf_upper = buf.upper()

memcached1 = server.memcached
memcached2 = MemcachedConnection('localhost', server.memcached_port)

print """# Store big in lower case via first memcached client """
print "set big 0 0 %d\r\n<big-value-lower-case>" % buf_size
print exec memcached1 silent "set big 0 0 %d\r\n%s\r\n" % (buf_size, buf)

print """# send command 'get big' to firs memcached client """
send memcached1 "get big\r\n"

print """# send command 'delete big' to second client """
exec memcached2 "delete big\r\n"

print """# Store big in lower case via first memcached client """
print "set big 0 0 %d\r\n<big-value-upper-case>" % buf_size
print exec memcached2 silent "set big 0 0 %d\r\n%s\r\n" % (buf_size, buf_upper)

print """# recv reply 'get big' from the first memcached client """
reply = recv memcached1 silent
reply_buf = reply.split('\r\n')[1]
if buf == reply_buf:
    print "success: buf == reply"
else:
    print "fail: buf != reply"
    print len(buf), len(reply_buf)

# resore default suite config
server.stop()
server.deploy(self.suite_ini["config"])
# check that we print clear memcached stats
exec admin "show stat"
# vim: syntax=python
